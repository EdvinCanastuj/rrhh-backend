// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using rrhh_backend.Data;

#nullable disable

namespace rrhh_backend.Migrations
{
    [DbContext(typeof(RrHhContext))]
    [Migration("20241112032119_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("rrhh_backend.Data.Models.AdminBitacoraUsuario", b =>
                {
                    b.Property<int>("IdBitacoraUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBitacoraUser"));

                    b.Property<string>("AccionBitacora")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("FechaBitacora")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdBitacoraUser");

                    b.HasIndex(new[] { "IdUsuario" }, "IX_Relationship3");

                    b.ToTable("AdminBitacoraUsuario", (string)null);
                });

            modelBuilder.Entity("rrhh_backend.Data.Models.AdminEstado", b =>
                {
                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstado"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NombreEstado")
                        .IsRequired()
                        .HasMaxLength(55)
                        .IsUnicode(false)
                        .HasColumnType("varchar(55)");

                    b.HasKey("IdEstado");

                    b.ToTable("AdminEstado", (string)null);
                });

            modelBuilder.Entity("rrhh_backend.Data.Models.AdminPermiso", b =>
                {
                    b.Property<int>("IdPermiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPermiso"));

                    b.Property<string>("DescripcionPermiso")
                        .HasMaxLength(55)
                        .IsUnicode(false)
                        .HasColumnType("varchar(55)");

                    b.Property<string>("NombrePermiso")
                        .IsRequired()
                        .HasMaxLength(55)
                        .IsUnicode(false)
                        .HasColumnType("varchar(55)");

                    b.HasKey("IdPermiso");

                    b.ToTable("AdminPermisos", (string)null);
                });

            modelBuilder.Entity("rrhh_backend.Data.Models.AdminResetPassword", b =>
                {
                    b.Property<int>("IdToken")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdToken"));

                    b.Property<DateTime>("FechaCreacionToken")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaExpiracionToken")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("NombreToken")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("IdToken");

                    b.HasIndex(new[] { "IdUsuario" }, "IX_Relationship2");

                    b.ToTable("AdminResetPassword", (string)null);
                });

            modelBuilder.Entity("rrhh_backend.Data.Models.AdminRole", b =>
                {
                    b.Property<int>("IdRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRole"));

                    b.Property<string>("DescripcionRol")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NombreRol")
                        .IsRequired()
                        .HasMaxLength(55)
                        .IsUnicode(false)
                        .HasColumnType("varchar(55)");

                    b.HasKey("IdRole");

                    b.ToTable("AdminRoles", (string)null);
                });

            modelBuilder.Entity("rrhh_backend.Data.Models.AdminRolesPermiso", b =>
                {
                    b.Property<int>("IdRolePermiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRolePermiso"));

                    b.Property<int>("IdPermiso")
                        .HasColumnType("int");

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.HasKey("IdRolePermiso");

                    b.HasIndex(new[] { "IdRole" }, "IX_Relationship4");

                    b.HasIndex(new[] { "IdPermiso" }, "IX_Relationship5");

                    b.ToTable("AdminRolesPermisos", (string)null);
                });

            modelBuilder.Entity("rrhh_backend.Data.Models.AdminUser", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdColaborador")
                        .HasColumnType("int");

                    b.Property<int?>("IdEstado")
                        .HasColumnType("int");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(55)
                        .IsUnicode(false)
                        .HasColumnType("varchar(55)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(55)
                        .IsUnicode(false)
                        .HasColumnType("varchar(55)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdColaborador")
                        .IsUnique()
                        .HasFilter("[IdColaborador] IS NOT NULL");

                    b.HasIndex(new[] { "IdEstado" }, "IX_Relationship1");

                    b.ToTable("AdminUser", (string)null);
                });

            modelBuilder.Entity("rrhh_backend.Data.Models.AdminUserRole", b =>
                {
                    b.Property<int>("IdUserRoles")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUserRoles"));

                    b.Property<DateTime>("FechaAsignacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdUserRoles");

                    b.HasIndex(new[] { "IdUsuario" }, "IX_Relationship7");

                    b.HasIndex(new[] { "IdRole" }, "IX_Relationship8");

                    b.ToTable("AdminUserRoles", (string)null);
                });

            modelBuilder.Entity("rrhh_backend.Data.Models.RHColaborador", b =>
                {
                    b.Property<int>("IdColaborador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdColaborador"));

                    b.Property<string>("ApellidoCasada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Debaja")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartamentoExtendido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dpi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("FechaInicioLabores")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdDepartamento")
                        .HasColumnType("int");

                    b.Property<int>("IdEstadoCivil")
                        .HasColumnType("int");

                    b.Property<int>("IdEstadoColaborador")
                        .HasColumnType("int");

                    b.Property<string>("LugarNacimiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MunicipioExtendido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nacionalidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoCuentaBancaria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoIGSS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoNIT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreConyuge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdColaborador");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("IX_RHColaborador_Email");

                    b.HasIndex("IdDepartamento");

                    b.HasIndex("IdEstadoCivil");

                    b.HasIndex("IdEstadoColaborador");

                    b.ToTable("RHColaborador", (string)null);
                });

            modelBuilder.Entity("rrhh_backend.Data.Models.RHDepartamento", b =>
                {
                    b.Property<int>("IdDepartamentos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDepartamentos"));

                    b.Property<string>("DescripcionDepartamento")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NombreDepartamento")
                        .IsRequired()
                        .HasMaxLength(55)
                        .IsUnicode(false)
                        .HasColumnType("varchar(55)");

                    b.HasKey("IdDepartamentos");

                    b.ToTable("RHDepartamento", (string)null);
                });

            modelBuilder.Entity("rrhh_backend.Data.Models.RHEstadoCivil", b =>
                {
                    b.Property<int>("IdEstadoCivil")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstadoCivil"));

                    b.Property<string>("EstadoCivil")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdEstadoCivil");

                    b.ToTable("RHEstadoCivil", (string)null);
                });

            modelBuilder.Entity("rrhh_backend.Data.Models.RHEstadoColaborador", b =>
                {
                    b.Property<int>("IdEstadoColaborador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstadoColaborador"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadosColaborador")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdEstadoColaborador");

                    b.ToTable("RHEstadoColaborador", (string)null);
                });

            modelBuilder.Entity("rrhh_backend.Data.Models.RHEstadoLicencias", b =>
                {
                    b.Property<int>("IdEstadoLicencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstadoLicencia"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoLicencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEstadoLicencia");

                    b.ToTable("RHEstadoLicencias", (string)null);
                });

            modelBuilder.Entity("rrhh_backend.Data.Models.RHHistorialDepartamento", b =>
                {
                    b.Property<int>("IdHistorialDepartamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHistorialDepartamento"));

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdColaborador")
                        .HasColumnType("int");

                    b.Property<int>("IdDepartamento")
                        .HasColumnType("int");

                    b.HasKey("IdHistorialDepartamento");

                    b.HasIndex("IdColaborador");

                    b.HasIndex("IdDepartamento");

                    b.ToTable("RHHistorialDepartamento", (string)null);
                });

            modelBuilder.Entity("rrhh_backend.Data.Models.RHLicencias", b =>
                {
                    b.Property<int>("IdLicencias")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLicencias"));

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdColaborador")
                        .HasColumnType("int");

                    b.Property<int>("IdEstadoLicencia")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoLicencia")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdLicencias");

                    b.HasIndex("IdColaborador");

                    b.HasIndex("IdEstadoLicencia");

                    b.HasIndex("IdTipoLicencia");

                    b.ToTable("RHLicencias", (string)null);
                });

            modelBuilder.Entity("rrhh_backend.Data.Models.RHTipoLicencias", b =>
                {
                    b.Property<int>("IdTipoLicencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoLicencia"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoLicencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTipoLicencia");

                    b.ToTable("RHTipoLicencias", (string)null);
                });

            modelBuilder.Entity("rrhh_backend.Data.Models.AdminBitacoraUsuario", b =>
                {
                    b.HasOne("rrhh_backend.Data.Models.AdminUser", "IdUsuarioNavigation")
                        .WithMany("UserBitacoraUsuarios")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("Relationship3");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("rrhh_backend.Data.Models.AdminResetPassword", b =>
                {
                    b.HasOne("rrhh_backend.Data.Models.AdminUser", "IdUsuarioNavigation")
                        .WithMany("UserResetPasswords")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("Relationship2");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("rrhh_backend.Data.Models.AdminRolesPermiso", b =>
                {
                    b.HasOne("rrhh_backend.Data.Models.AdminPermiso", "IdPermisoNavigation")
                        .WithMany("UserRolesPermisos")
                        .HasForeignKey("IdPermiso")
                        .IsRequired()
                        .HasConstraintName("Relationship5");

                    b.HasOne("rrhh_backend.Data.Models.AdminRole", "IdRoleNavigation")
                        .WithMany("UserRolesPermisos")
                        .HasForeignKey("IdRole")
                        .IsRequired()
                        .HasConstraintName("Relationship4");

                    b.Navigation("IdPermisoNavigation");

                    b.Navigation("IdRoleNavigation");
                });

            modelBuilder.Entity("rrhh_backend.Data.Models.AdminUser", b =>
                {
                    b.HasOne("rrhh_backend.Data.Models.RHColaborador", "IdColaboradorNavigation")
                        .WithOne("UserUser")
                        .HasForeignKey("rrhh_backend.Data.Models.AdminUser", "IdColaborador")
                        .HasConstraintName("FK_User_User_Gth_Colaborador");

                    b.HasOne("rrhh_backend.Data.Models.AdminEstado", "IdEstadoNavigation")
                        .WithMany("UserUsers")
                        .HasForeignKey("IdEstado")
                        .HasConstraintName("Relationship1");

                    b.Navigation("IdColaboradorNavigation");

                    b.Navigation("IdEstadoNavigation");
                });

            modelBuilder.Entity("rrhh_backend.Data.Models.AdminUserRole", b =>
                {
                    b.HasOne("rrhh_backend.Data.Models.AdminRole", "IdRoleNavigation")
                        .WithMany("UserUserRoles")
                        .HasForeignKey("IdRole")
                        .IsRequired()
                        .HasConstraintName("Relationship8");

                    b.HasOne("rrhh_backend.Data.Models.AdminUser", "IdUsuarioNavigation")
                        .WithMany("UserUserRoles")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("Relationship7");

                    b.Navigation("IdRoleNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("rrhh_backend.Data.Models.RHColaborador", b =>
                {
                    b.HasOne("rrhh_backend.Data.Models.RHDepartamento", "RHDepartamento")
                        .WithMany("RHColaboradores")
                        .HasForeignKey("IdDepartamento")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("rrhh_backend.Data.Models.RHEstadoCivil", "RHEstadoCivil")
                        .WithMany("RHColaboradores")
                        .HasForeignKey("IdEstadoCivil")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_RHColaborador_RHEstadoCivil");

                    b.HasOne("rrhh_backend.Data.Models.RHEstadoColaborador", "RHEstadoColaborador")
                        .WithMany("RHColaboradores")
                        .HasForeignKey("IdEstadoColaborador")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_RHColaborador_RHEstadoColaborador");

                    b.Navigation("RHDepartamento");

                    b.Navigation("RHEstadoCivil");

                    b.Navigation("RHEstadoColaborador");
                });

            modelBuilder.Entity("rrhh_backend.Data.Models.RHHistorialDepartamento", b =>
                {
                    b.HasOne("rrhh_backend.Data.Models.RHColaborador", "RHColaborador")
                        .WithMany("RHHistorialDepartamentos")
                        .HasForeignKey("IdColaborador")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_RHHistorialDepartamento_RHColaborador");

                    b.HasOne("rrhh_backend.Data.Models.RHDepartamento", "RHDepartamento")
                        .WithMany("RHHistorialDepartamentos")
                        .HasForeignKey("IdDepartamento")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_RHHistorialDepartamento_RHDepartamento");

                    b.Navigation("RHColaborador");

                    b.Navigation("RHDepartamento");
                });

            modelBuilder.Entity("rrhh_backend.Data.Models.RHLicencias", b =>
                {
                    b.HasOne("rrhh_backend.Data.Models.RHColaborador", "RHColaborador")
                        .WithMany("RHLicencias")
                        .HasForeignKey("IdColaborador")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("rrhh_backend.Data.Models.RHEstadoLicencias", "RHEstadoLicencias")
                        .WithMany("RHLicencias")
                        .HasForeignKey("IdEstadoLicencia")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("rrhh_backend.Data.Models.RHTipoLicencias", "RHTipoLicencias")
                        .WithMany("RHLicencias")
                        .HasForeignKey("IdTipoLicencia")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("RHColaborador");

                    b.Navigation("RHEstadoLicencias");

                    b.Navigation("RHTipoLicencias");
                });

            modelBuilder.Entity("rrhh_backend.Data.Models.AdminEstado", b =>
                {
                    b.Navigation("UserUsers");
                });

            modelBuilder.Entity("rrhh_backend.Data.Models.AdminPermiso", b =>
                {
                    b.Navigation("UserRolesPermisos");
                });

            modelBuilder.Entity("rrhh_backend.Data.Models.AdminRole", b =>
                {
                    b.Navigation("UserRolesPermisos");

                    b.Navigation("UserUserRoles");
                });

            modelBuilder.Entity("rrhh_backend.Data.Models.AdminUser", b =>
                {
                    b.Navigation("UserBitacoraUsuarios");

                    b.Navigation("UserResetPasswords");

                    b.Navigation("UserUserRoles");
                });

            modelBuilder.Entity("rrhh_backend.Data.Models.RHColaborador", b =>
                {
                    b.Navigation("RHHistorialDepartamentos");

                    b.Navigation("RHLicencias");

                    b.Navigation("UserUser");
                });

            modelBuilder.Entity("rrhh_backend.Data.Models.RHDepartamento", b =>
                {
                    b.Navigation("RHColaboradores");

                    b.Navigation("RHHistorialDepartamentos");
                });

            modelBuilder.Entity("rrhh_backend.Data.Models.RHEstadoCivil", b =>
                {
                    b.Navigation("RHColaboradores");
                });

            modelBuilder.Entity("rrhh_backend.Data.Models.RHEstadoColaborador", b =>
                {
                    b.Navigation("RHColaboradores");
                });

            modelBuilder.Entity("rrhh_backend.Data.Models.RHEstadoLicencias", b =>
                {
                    b.Navigation("RHLicencias");
                });

            modelBuilder.Entity("rrhh_backend.Data.Models.RHTipoLicencias", b =>
                {
                    b.Navigation("RHLicencias");
                });
#pragma warning restore 612, 618
        }
    }
}
